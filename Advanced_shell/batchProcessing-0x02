#!/bin/bash

# List of Pokémon
POKEMON_LIST=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# API base URL
API_URL="https://pokeapi.co/api/v2/pokemon"

# Function to fetch data for a Pokémon with retry logic
fetch_pokemon_data() {
    pokemon=$1
    file_name="${pokemon}.json"
    max_retries=3
    attempt=1
    
    while [ $attempt -le $max_retries ]; do
        # Make the API request and save the data to a file
        response=$(curl --write-out "%{http_code}" --silent --output "$file_name" "$API_URL/$pokemon")
        
        # Check if the request was successful (HTTP status code 200)
        if [ "$response" -eq 200 ]; then
            echo "Data for $pokemon saved to $file_name"
            return 0
        else
            echo "Error: HTTP $response - Failed to fetch data for $pokemon (Attempt $attempt of $max_retries)"
            ((attempt++))
            
            # If it's not the last attempt, wait for 2 seconds before retrying
            if [ $attempt -le $max_retries ]; then
                sleep 2
            fi
        fi
    done
    
    # If we've reached here, the request failed after 3 attempts
    echo "Error: Failed to retrieve data for $pokemon after $max_retries attempts" >> errors.txt
}

# Loop through the list of Pokémon
for pokemon in "${POKEMON_LIST[@]}"; do
    # Fetch data for each Pokémon and save it to a separate file
    fetch_pokemon_data "$pokemon"
    
    # Delay of 2 seconds between requests to handle rate-limiting
    sleep 2
done
